{"id":"../../node_modules/@iobroker/adapter-react/Theme.js","dependencies":[{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Theme.js.map","includedInParent":true,"mtime":1681998080950},{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/package.json","includedInParent":true,"mtime":1681998828100},{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/package.json","includedInParent":true,"mtime":1681998078622},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37,"index":52},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Theme.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"@material-ui/core/styles","loc":{"line":10,"column":22,"index":219},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Theme.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@material-ui/core/esm/styles/index.js"},{"name":"@material-ui/core/colors/orange","loc":{"line":12,"column":45,"index":294},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Theme.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@material-ui/core/colors/orange.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _orange = _interopRequireDefault(require(\"@material-ui/core/colors/orange\"));\n\nvar step = (16 - 5) / 23 / 100;\n/**\n * Convert hex color in the format '#rrggbb' or '#rgb' to an RGB object.\n * @param {string} hex\n * @returns {{r: number, g: number, b: number}}\n */\n\nfunction toInt(hex) {\n  var rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n\n  if (hex.length === 7) {\n    rgb.r = parseInt(hex.substr(1, 2), 16);\n    rgb.g = parseInt(hex.substr(3, 2), 16);\n    rgb.b = parseInt(hex.substr(5, 2), 16);\n  } else if (hex.length === 4) {\n    var r = hex.substr(1, 1);\n    var g = hex.substr(2, 1);\n    var b = hex.substr(3, 1);\n    rgb.r = parseInt(r + r, 16);\n    rgb.g = parseInt(g + g, 16);\n    rgb.b = parseInt(b + b, 16);\n  }\n\n  return rgb;\n}\n/**\n * Convert an RGB object to a hex color string in the format '#rrggbb'.\n * @param {{r: number, g: number, b: number}} int\n * @returns {string}\n */\n\n\nfunction toHex(_int) {\n  return '#' + Math.round(_int.r).toString(16) + Math.round(_int.g).toString(16) + Math.round(_int.b).toString(16);\n}\n/**\n * @param {string} color color in the format '#rrggbb' or '#rgb'\n * @param {string} overlayColor overlay color in the format '#rrggbb' or '#rgb'\n * @param {number} elevation elevation as an integer starting with 1\n * @returns {string} the hex color string in the format '#rrggbb'\n */\n\n\nfunction getElevation(color, overlayColor, elevation) {\n  var rgb = toInt(color);\n  var overlay = toInt(overlayColor);\n  rgb.r += overlay.r * (0.05 + step * (elevation - 1));\n  rgb.g += overlay.g * (0.05 + step * (elevation - 1));\n  rgb.b += overlay.b * (0.05 + step * (elevation - 1));\n  return toHex(rgb);\n}\n/**\n * Get all 24 elevations of the given color and overlay.\n * @param {string} color color in the format '#rrggbb' or '#rgb'\n * @param {string} overlay overlay color in the format '#rrggbb' or '#rgb'\n * @returns {import('@material-ui/core/styles/withStyles').CSSProperties}\n */\n\n\nfunction getElevations(color, overlay) {\n  /** @type {import('@material-ui/core/styles/withStyles').CSSProperties} */\n  var elevations = {};\n\n  for (var i = 1; i <= 24; i++) {\n    elevations['elevation' + i] = {\n      backgroundColor: getElevation(color, overlay, i)\n    };\n  }\n\n  return elevations;\n}\n/**\n * The theme creation factory function.\n * @param {string} type\n * @returns {import('./types').Theme}\n */\n\n\nvar Theme = function Theme(type) {\n  var theme;\n\n  if (type === 'dark') {\n    theme = {\n      name: type,\n      palette: {\n        type: 'dark',\n        background: {\n          paper: '#121212',\n          \"default\": '#121212'\n        },\n        primary: {\n          main: '#4dabf5'\n        },\n        secondary: {\n          main: '#436a93'\n        },\n        expert: '#14bb00',\n        text: {\n          primary: '#ffffff',\n          secondary: '#ffffff'\n        }\n      },\n      overrides: {\n        MuiAppBar: {\n          colorDefault: {\n            backgroundColor: '#272727'\n          }\n        },\n        MuiLink: {\n          root: {\n            textTransform: 'uppercase',\n            transition: 'color .3s ease',\n            color: _orange[\"default\"][200],\n            '&:hover': {\n              color: _orange[\"default\"][100]\n            }\n          }\n        },\n        MuiPaper: getElevations('#121212', '#fff')\n      }\n    };\n  } else if (type === 'blue') {\n    theme = {\n      name: type,\n      palette: {\n        type: 'dark',\n        background: {\n          paper: '#151d21',\n          \"default\": '#151d21'\n        },\n        primary: {\n          main: '#4dabf5'\n        },\n        secondary: {\n          main: '#436a93'\n        },\n        expert: '#14bb00',\n        text: {\n          primary: '#ffffff',\n          secondary: '#ffffff'\n        }\n      },\n      overrides: {\n        MuiAppBar: {\n          colorDefault: {\n            backgroundColor: '#2a3135'\n          }\n        },\n        MuiLink: {\n          root: {\n            textTransform: 'uppercase',\n            transition: 'color .3s ease',\n            color: _orange[\"default\"][200],\n            '&:hover': {\n              color: _orange[\"default\"][100]\n            }\n          }\n        },\n        MuiPaper: getElevations('#151d21', '#fff')\n      }\n    };\n  } else if (type === 'colored') {\n    theme = {\n      name: type,\n      palette: {\n        type: 'light',\n        primary: {\n          main: '#3399CC'\n        },\n        secondary: {\n          main: '#164477'\n        },\n        expert: '#96fc96'\n      },\n      overrides: {\n        MuiAppBar: {\n          colorDefault: {\n            backgroundColor: '#3399CC'\n          }\n        },\n        MuiLink: {\n          root: {\n            textTransform: 'uppercase',\n            transition: 'color .3s ease',\n            color: _orange[\"default\"][400],\n            '&:hover': {\n              color: _orange[\"default\"][300]\n            }\n          }\n        }\n      }\n    };\n  } else if (type === 'PT') {\n    theme = {\n      name: type,\n      palette: {\n        type: 'light',\n        primary: {\n          main: '#0F99DE'\n        },\n        secondary: {\n          main: '#88A536'\n        },\n        expert: '#BD1B24'\n      },\n      overrides: {\n        MuiAppBar: {\n          colorDefault: {\n            backgroundColor: '#0F99DE'\n          }\n        },\n        MuiLink: {\n          root: {\n            textTransform: 'uppercase',\n            transition: 'color .3s ease',\n            color: _orange[\"default\"][400],\n            '&:hover': {\n              color: _orange[\"default\"][300]\n            }\n          }\n        }\n      }\n    };\n  } else if (type === 'DX') {\n    theme = {\n      name: type,\n      palette: {\n        type: 'light',\n        primary: {\n          main: '#F5F5F7'\n        },\n        secondary: {\n          main: '#a9a9a9'\n        },\n        expert: '#BD1B24',\n        text: {\n          primary: '#007AFE',\n          secondary: '#007AFE',\n          disabled: '#007AFEAA'\n        }\n      },\n      overrides: {\n        MuiAppBar: {\n          colorDefault: {\n            backgroundColor: '#a9a9a9'\n          }\n        },\n        MuiLink: {\n          root: {\n            textTransform: 'uppercase',\n            transition: 'color .3s ease',\n            color: _orange[\"default\"][400],\n            '&:hover': {\n              color: _orange[\"default\"][300]\n            }\n          }\n        }\n      }\n    };\n  } else {\n    theme = {\n      name: type,\n      palette: {\n        type: 'light',\n        primary: {\n          main: '#3399CC'\n        },\n        secondary: {\n          main: '#164477'\n        },\n        expert: '#14bb00'\n      },\n      overrides: {\n        MuiLink: {\n          root: {\n            textTransform: 'uppercase',\n            transition: 'color .3s ease',\n            color: _orange[\"default\"][400],\n            '&:hover': {\n              color: _orange[\"default\"][300]\n            }\n          }\n        }\n      }\n    };\n  }\n\n  theme.toolbar = {\n    height: 48\n  }; // add save toolbar\n\n  theme.saveToolbar = {\n    background: theme.palette.primary.main,\n    button: {\n      borderRadius: 3,\n      height: 32\n    }\n  };\n  return (0, _styles.createTheme)(theme);\n};\n\nvar _default = Theme;\nexports[\"default\"] = _default;\n\n"},"sourceMaps":{"js":{"version":3,"sources":["Theme.js"],"names":["step","toInt","hex","rgb","r","g","b","length","parseInt","substr","toHex","int","Math","round","toString","getElevation","color","overlayColor","elevation","overlay","getElevations","elevations","i","backgroundColor","Theme","type","theme","name","palette","background","paper","primary","main","secondary","expert","text","overrides","MuiAppBar","colorDefault","MuiLink","root","textTransform","transition","orange","MuiPaper","disabled","toolbar","height","saveToolbar","button","borderRadius"],"mappings":"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","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\n\nimport orange from '@material-ui/core/colors/orange';\n\nconst step = (16 - 5) / 23 / 100;\n\n/**\n * Convert hex color in the format '#rrggbb' or '#rgb' to an RGB object.\n * @param {string} hex\n * @returns {{r: number, g: number, b: number}}\n */\nfunction toInt(hex) {\n    const rgb = {\n        r: 0,\n        g: 0,\n        b: 0\n    };\n\n    if (hex.length === 7) {\n        rgb.r = parseInt(hex.substr(1, 2), 16);\n        rgb.g = parseInt(hex.substr(3, 2), 16);\n        rgb.b = parseInt(hex.substr(5, 2), 16);\n    } else if (hex.length === 4) {\n\n        const r = hex.substr(1, 1);\n        const g = hex.substr(2, 1);\n        const b = hex.substr(3, 1);\n\n        rgb.r = parseInt(r + r, 16);\n        rgb.g = parseInt(g + g, 16);\n        rgb.b = parseInt(b + b, 16);\n    }\n\n    return rgb;\n}\n\n/**\n * Convert an RGB object to a hex color string in the format '#rrggbb'.\n * @param {{r: number, g: number, b: number}} int\n * @returns {string}\n */\nfunction toHex(int) {\n    return '#' + Math.round(int.r).toString(16) + Math.round(int.g).toString(16) + Math.round(int.b).toString(16);\n}\n\n/**\n * @param {string} color color in the format '#rrggbb' or '#rgb'\n * @param {string} overlayColor overlay color in the format '#rrggbb' or '#rgb'\n * @param {number} elevation elevation as an integer starting with 1\n * @returns {string} the hex color string in the format '#rrggbb'\n */\nfunction getElevation(color, overlayColor, elevation) {\n    const rgb = toInt(color);\n    const overlay = toInt(overlayColor);\n\n    rgb.r += overlay.r * (0.05 + step * (elevation - 1));\n    rgb.g += overlay.g * (0.05 + step * (elevation - 1));\n    rgb.b += overlay.b * (0.05 + step * (elevation - 1));\n\n    return toHex(rgb);\n}\n\n/**\n * Get all 24 elevations of the given color and overlay.\n * @param {string} color color in the format '#rrggbb' or '#rgb'\n * @param {string} overlay overlay color in the format '#rrggbb' or '#rgb'\n * @returns {import('@material-ui/core/styles/withStyles').CSSProperties}\n */\nfunction getElevations(color, overlay) {\n    /** @type {import('@material-ui/core/styles/withStyles').CSSProperties} */\n    const elevations = {};\n\n    for(let i = 1; i <= 24; i++) {\n        elevations['elevation' + i] = {\n            backgroundColor: getElevation(color, overlay, i)\n        }\n    }\n\n    return elevations;\n}\n\n/**\n * The theme creation factory function.\n * @param {string} type\n * @returns {import('./types').Theme}\n */\nconst Theme = type => {\n    let theme;\n    if (type === 'dark') {\n        theme = {\n            name: type,\n            palette: {\n                type: 'dark',\n                background: {\n                    paper: '#121212',\n                    default: '#121212'\n                },\n                primary: {\n                    main: '#4dabf5'\n                },\n                secondary: {\n                    main: '#436a93'\n                },\n                expert: '#14bb00',\n                text: {\n                    primary: '#ffffff',\n                    secondary: '#ffffff'\n                }\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#272727'\n                    }\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[200],\n                        '&:hover': {\n                            color: orange[100]\n                        }\n                    }\n                },\n                MuiPaper: getElevations('#121212', '#fff')\n            }\n        };\n    } else if (type === 'blue') {\n        theme = {\n            name: type,\n            palette: {\n                type: 'dark',\n                background: {\n                    paper: '#151d21',\n                    default: '#151d21'\n                },\n                primary: {\n                    main: '#4dabf5'\n                },\n                secondary: {\n                    main: '#436a93'\n                },\n                expert: '#14bb00',\n                text: {\n                    primary: '#ffffff',\n                    secondary: '#ffffff'\n                }\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#2a3135'\n                    }\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[200],\n                        '&:hover': {\n                            color: orange[100]\n                        }\n                    }\n                },\n                MuiPaper: getElevations('#151d21', '#fff')\n            }\n        };\n    } else if (type === 'colored') {\n        theme = {\n            name: type,\n            palette: {\n                type: 'light',\n                primary: {\n                    main: '#3399CC'\n                },\n                secondary: {\n                    main: '#164477'\n                },\n                expert: '#96fc96'\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#3399CC'\n                    }\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[400],\n                        '&:hover': {\n                            color: orange[300]\n                        }\n                    }\n                }\n            }\n        };\n    } else if (type === 'PT') {\n        theme = {\n            name: type,\n            palette: {\n                type: 'light',\n                primary: {\n                    main: '#0F99DE'\n                },\n                secondary: {\n                    main: '#88A536'\n                },\n                expert: '#BD1B24'\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#0F99DE'\n                    }\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[400],\n                        '&:hover': {\n                            color: orange[300]\n                        }\n                    }\n                }\n            }\n        };\n    }  else if (type === 'DX') {\n        theme = {\n            name: type,\n            palette: {\n                type: 'light',\n                primary: {\n                    main: '#F5F5F7'\n                },\n                secondary: {\n                    main: '#a9a9a9'\n                },\n                expert: '#BD1B24',\n                text: {\n                    primary: '#007AFE',\n                    secondary: '#007AFE',\n                    disabled: '#007AFEAA',\n                }\n            },\n            overrides: {\n                MuiAppBar: {\n                    colorDefault: {\n                        backgroundColor: '#a9a9a9'\n                    }\n                },\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[400],\n                        '&:hover': {\n                            color: orange[300]\n                        }\n                    }\n                }\n            }\n        };\n    } else {\n        theme = {\n            name: type,\n            palette: {\n                type: 'light',\n                primary: {\n                    main: '#3399CC'\n                },\n                secondary: {\n                    main: '#164477'\n                },\n                expert: '#14bb00'\n            },\n            overrides: {\n                MuiLink: {\n                    root: {\n                        textTransform: 'uppercase',\n                        transition: 'color .3s ease',\n                        color: orange[400],\n                        '&:hover': {\n                            color: orange[300]\n                        }\n                    }\n                }\n            }\n        };\n    }\n\n    theme.toolbar = {\n        height: 48\n    };\n\n    // add save toolbar\n    theme.saveToolbar = {\n        background: theme.palette.primary.main,\n        button: {\n            borderRadius: 3,\n            height: 32\n        }\n    };\n\n    return createTheme(theme);\n};\n\nexport default Theme;\n"],"file":"Theme.js"}},"error":null,"hash":"7d838dde9cb23b60ed1f460f74f30b9d","cacheData":{"env":{}}}