{"id":"../../node_modules/@iobroker/adapter-react/GenericApp.js","dependencies":[{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js.map","includedInParent":true,"mtime":1681998079870},{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/package.json","includedInParent":true,"mtime":1681998828100},{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/package.json","includedInParent":true,"mtime":1681998078622},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37,"index":52},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"@babel/runtime/helpers/typeof","loc":{"line":12,"column":46,"index":301},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/typeof.js"},{"name":"@babel/runtime/helpers/classCallCheck","loc":{"line":14,"column":54,"index":391},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/classCallCheck.js"},{"name":"@babel/runtime/helpers/createClass","loc":{"line":16,"column":51,"index":486},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/createClass.js"},{"name":"@babel/runtime/helpers/assertThisInitialized","loc":{"line":18,"column":61,"index":588},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/assertThisInitialized.js"},{"name":"@babel/runtime/helpers/get","loc":{"line":20,"column":43,"index":682},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/get.js"},{"name":"@babel/runtime/helpers/inherits","loc":{"line":22,"column":48,"index":763},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/inherits.js"},{"name":"@babel/runtime/helpers/possibleConstructorReturn","loc":{"line":24,"column":65,"index":866},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"},{"name":"@babel/runtime/helpers/getPrototypeOf","loc":{"line":26,"column":54,"index":975},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/getPrototypeOf.js"},{"name":"@babel/runtime/helpers/defineProperty","loc":{"line":28,"column":54,"index":1073},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@babel/runtime/helpers/defineProperty.js"},{"name":"react","loc":{"line":30,"column":44,"index":1161},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/react/index.js"},{"name":"./Connection","loc":{"line":32,"column":50,"index":1223},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Connection.js"},{"name":"prop-types","loc":{"line":34,"column":48,"index":1290},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/prop-types/index.js"},{"name":"@sentry/browser","loc":{"line":36,"column":45,"index":1352},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/browser/esm/index.js"},{"name":"@sentry/integrations","loc":{"line":38,"column":57,"index":1431},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/integrations/esm/index.js"},{"name":"./Dialogs/Error","loc":{"line":40,"column":44,"index":1502},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Dialogs/Error.js"},{"name":"@material-ui/core/Snackbar","loc":{"line":42,"column":47,"index":1571},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@material-ui/core/esm/Snackbar/index.js"},{"name":"@material-ui/core/IconButton","loc":{"line":44,"column":49,"index":1653},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@material-ui/core/esm/IconButton/index.js"},{"name":"@material-ui/icons/Close","loc":{"line":46,"column":44,"index":1732},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@material-ui/icons/Close.js"},{"name":"./Prompt","loc":{"line":48,"column":45,"index":1808},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Prompt.js"},{"name":"./Theme","loc":{"line":50,"column":44,"index":1867},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Theme.js"},{"name":"./Components/Loader","loc":{"line":52,"column":45,"index":1926},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Components/Loader.js"},{"name":"./Components/Router","loc":{"line":54,"column":46,"index":1998},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Components/Router.js"},{"name":"./Components/Utils","loc":{"line":56,"column":44,"index":2068},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Components/Utils.js"},{"name":"./Components/SaveCloseButtons","loc":{"line":58,"column":55,"index":2148},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/Components/SaveCloseButtons.js"},{"name":"./i18n","loc":{"line":60,"column":43,"index":2227},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n.js"},{"name":"./index.css","loc":{"line":62,"column":8,"index":2248},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/index.css"},{"name":"./i18n/en.json","loc":{"line":219,"column":20,"index":10551},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/en.json"},{"name":"./i18n/de.json","loc":{"line":220,"column":20,"index":10590},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/de.json"},{"name":"./i18n/ru.json","loc":{"line":221,"column":20,"index":10629},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/ru.json"},{"name":"./i18n/pt.json","loc":{"line":222,"column":20,"index":10668},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/pt.json"},{"name":"./i18n/nl.json","loc":{"line":223,"column":20,"index":10707},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/nl.json"},{"name":"./i18n/fr.json","loc":{"line":224,"column":20,"index":10746},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/fr.json"},{"name":"./i18n/it.json","loc":{"line":225,"column":20,"index":10785},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/it.json"},{"name":"./i18n/es.json","loc":{"line":226,"column":20,"index":10824},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/es.json"},{"name":"./i18n/pl.json","loc":{"line":227,"column":20,"index":10863},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/pl.json"},{"name":"./i18n/zh-cn.json","loc":{"line":228,"column":23,"index":10905},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/GenericApp.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@iobroker/adapter-react/i18n/zh-cn.json"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof3 = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Connection = _interopRequireWildcard(require(\"./Connection\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar Sentry = _interopRequireWildcard(require(\"@sentry/browser\"));\n\nvar SentryIntegrations = _interopRequireWildcard(require(\"@sentry/integrations\"));\n\nvar _Error = _interopRequireDefault(require(\"./Dialogs/Error\"));\n\nvar _Snackbar = _interopRequireDefault(require(\"@material-ui/core/Snackbar\"));\n\nvar _IconButton = _interopRequireDefault(require(\"@material-ui/core/IconButton\"));\n\nvar _Close = _interopRequireDefault(require(\"@material-ui/icons/Close\"));\n\nvar _Prompt = _interopRequireDefault(require(\"./Prompt\"));\n\nvar _Theme = _interopRequireDefault(require(\"./Theme\"));\n\nvar _Loader = _interopRequireDefault(require(\"./Components/Loader\"));\n\nvar _Router2 = _interopRequireDefault(require(\"./Components/Router\"));\n\nvar _Utils = _interopRequireDefault(require(\"./Components/Utils\"));\n\nvar _SaveCloseButtons = _interopRequireDefault(require(\"./Components/SaveCloseButtons\"));\n\nvar _i18n = _interopRequireDefault(require(\"./i18n\"));\n\nrequire(\"./index.css\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nif (!window.localStorage) {\n  window.localStorage = {\n    getItem: function getItem() {\n      return null;\n    },\n    setItem: function setItem() {\n      return null;\n    }\n  };\n}\n/**\n * @extends {Router<import('./types').GenericAppProps, import('./types').GenericAppState>}\n */\n\n\nvar GenericApp = /*#__PURE__*/function (_Router) {\n  (0, _inherits2[\"default\"])(GenericApp, _Router);\n\n  var _super = _createSuper(GenericApp);\n\n  /**\n   * @param {import('./types').GenericAppProps} props\n   * @param {import('./types').GenericAppSettings | undefined} settings\n   */\n  function GenericApp(props, settings) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, GenericApp);\n\n    // Remove `!Connection.isWeb() && window.adapterName !== 'material'` when iobroker.socket will support native ws\n    if (!_Connection[\"default\"].isWeb() && window.io && window.location.port === '3000') {\n      try {\n        var io = new window.SocketClient();\n        delete window.io;\n        window.io = io;\n      } catch (e) {// ignore\n      }\n    }\n\n    _this = _super.call(this, props);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onSystemConfigChanged\", function (id, obj) {\n      if (obj && id === 'system.config') {\n        var _obj$common;\n\n        if (_this.socket.systemLang !== (obj === null || obj === void 0 ? void 0 : obj.common.language)) {\n          _this.socket.systemLang = (obj === null || obj === void 0 ? void 0 : obj.common.language) || 'en';\n\n          _i18n[\"default\"].setLanguage(_this.socket.systemLang);\n        }\n\n        if (_this._systemConfig.expertMode !== !!(obj !== null && obj !== void 0 && (_obj$common = obj.common) !== null && _obj$common !== void 0 && _obj$common.expertMode)) {\n          _this._systemConfig = (obj === null || obj === void 0 ? void 0 : obj.common) || {};\n\n          _this.setState({\n            expertMode: _this.getExpertMode()\n          });\n        } else {\n          _this._systemConfig = (obj === null || obj === void 0 ? void 0 : obj.common) || {};\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onReceiveMessage\", function (message) {\n      if (message !== null && message !== void 0 && message.data) {\n        if (message.data === 'updateTheme') {\n          var newThemeName = _Utils[\"default\"].getThemeName();\n\n          _Utils[\"default\"].setThemeName(_Utils[\"default\"].getThemeName());\n\n          var _theme = _this.createTheme(newThemeName);\n\n          _this.setState({\n            theme: _theme,\n            themeName: _this.getThemeName(_theme),\n            themeType: _this.getThemeType(_theme)\n          }, function () {\n            _this.props.onThemeChange && _this.props.onThemeChange(newThemeName);\n            _this.onThemeChanged && _this.onThemeChanged(newThemeName);\n          });\n        } else if (message.data === 'updateExpertMode') {\n          _this.onToggleExpertMode && _this.onToggleExpertMode(_this.getExpertMode());\n        } else {\n          console.warn('Received unknown message: ' + JSON.stringify(message.data));\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onResize\", function () {\n      _this.resizeTimer && clearTimeout(_this.resizeTimer);\n      _this.resizeTimer = setTimeout(function () {\n        _this.resizeTimer = null;\n\n        _this.setState({\n          width: GenericApp.getWidth()\n        });\n      }, 200);\n    });\n    (0, _Prompt[\"default\"])();\n    var query = (window.location.search || '').replace(/^\\?/, '').replace(/#.*$/, '');\n    var args = {};\n    query.trim().split('&').filter(function (t) {\n      return t.trim();\n    }).forEach(function (b) {\n      var parts = b.split('=');\n      args[parts[0]] = parts.length === 2 ? parts[1] : true;\n\n      if (args[parts[0]] === 'true') {\n        args[parts[0]] = true;\n      } else if (args[parts[0]] === 'false') {\n        args[parts[0]] = false;\n      }\n    }); // extract instance from URL\n\n    _this.instance = args.instance !== undefined ? parseInt(args.instance, 10) || 0 : parseInt(window.location.search.slice(1), 10) || 0; // extract adapter name from URL\n\n    var tmp = window.location.pathname.split('/');\n    _this.adapterName = (settings === null || settings === void 0 ? void 0 : settings.adapterName) || props.adapterName || window.adapterName || tmp[tmp.length - 2] || 'iot';\n    _this.instanceId = \"system.adapter.\".concat(_this.adapterName, \".\").concat(_this.instance);\n    _this.newReact = args.newReact === true; // it is admin5\n\n    var location = _Router2[\"default\"].getLocation();\n\n    location.tab = location.tab || window.localStorage.getItem(_this.adapterName + '-adapter') || '';\n\n    var themeInstance = _this.createTheme();\n\n    _this.state = {\n      selectedTab: window.localStorage.getItem(_this.adapterName + '-adapter') || '',\n      selectedTabNum: -1,\n      \"native\": {},\n      errorText: '',\n      changed: false,\n      connected: false,\n      loaded: false,\n      isConfigurationError: '',\n      expertMode: false,\n      toast: '',\n      theme: themeInstance,\n      themeName: _this.getThemeName(themeInstance),\n      themeType: _this.getThemeType(themeInstance),\n      bottomButtons: (settings && settings.bottomButtons) === false ? false : (props && props.bottomButtons) === false ? false : true,\n      width: GenericApp.getWidth()\n    }; // init translations\n\n    var translations = {\n      'en': require('./i18n/en.json'),\n      'de': require('./i18n/de.json'),\n      'ru': require('./i18n/ru.json'),\n      'pt': require('./i18n/pt.json'),\n      'nl': require('./i18n/nl.json'),\n      'fr': require('./i18n/fr.json'),\n      'it': require('./i18n/it.json'),\n      'es': require('./i18n/es.json'),\n      'pl': require('./i18n/pl.json'),\n      'zh-cn': require('./i18n/zh-cn.json')\n    }; // merge together\n\n    if (settings && settings.translations) {\n      Object.keys(settings.translations).forEach(function (lang) {\n        return translations[lang] = Object.assign(translations[lang], settings.translations[lang]);\n      });\n    } else if (props.translations) {\n      Object.keys(props.translations).forEach(function (lang) {\n        return translations[lang] = Object.assign(translations[lang], props.translations[lang]);\n      });\n    }\n\n    _i18n[\"default\"].setTranslations(translations);\n\n    _this.savedNative = {}; // to detect if the config changed\n\n    _this.encryptedFields = props.encryptedFields || (settings === null || settings === void 0 ? void 0 : settings.encryptedFields) || [];\n    _this.sentryDSN = settings && settings.sentryDSN || props.sentryDSN;\n    _this.socket = new _Connection[\"default\"](_objectSpread(_objectSpread({}, (props === null || props === void 0 ? void 0 : props.socket) || (settings === null || settings === void 0 ? void 0 : settings.socket)), {}, {\n      name: _this.adapterName,\n      doNotLoadAllObjects: settings === null || settings === void 0 ? void 0 : settings.doNotLoadAllObjects,\n      onProgress: function onProgress(progress) {\n        if (progress === _Connection.PROGRESS.CONNECTING) {\n          _this.setState({\n            connected: false\n          });\n        } else if (progress === _Connection.PROGRESS.READY) {\n          _this.setState({\n            connected: true\n          });\n        } else {\n          _this.setState({\n            connected: true\n          });\n        }\n      },\n      onReady: function onReady(objects, scripts) {\n        _i18n[\"default\"].setLanguage(_this.socket.systemLang); // subscribe because of language and expert mode\n\n\n        _this.socket.subscribeObject('system.config', _this.onSystemConfigChanged).then(function () {\n          return _this.getSystemConfig();\n        }).then(function (obj) {\n          _this._secret = typeof obj !== 'undefined' && obj[\"native\"] && obj[\"native\"].secret || 'Zgfr56gFe87jJOM';\n          _this._systemConfig = (obj === null || obj === void 0 ? void 0 : obj.common) || {};\n          return _this.socket.getObject(_this.instanceId);\n        }).then(function (instanceObj) {\n          var waitPromise;\n          var sentryEnabled = _this._systemConfig.diag !== 'none' && instanceObj && instanceObj.common && instanceObj.common.name && instanceObj.common.version && !instanceObj.common.disableDataReporting && window.location.host !== 'localhost:3000'; // activate sentry plugin\n\n          if (!_this.sentryStarted && _this.sentryDSN && sentryEnabled) {\n            _this.sentryStarted = true;\n            Sentry.init({\n              dsn: _this.sentryDSN,\n              release: \"iobroker.\".concat(instanceObj.common.name, \"@\").concat(instanceObj.common.version),\n              integrations: [new SentryIntegrations.Dedupe()]\n            });\n          } // read UUID and init sentry with it.\n          // for backward compatibility it will be processed separately from above logic: some adapters could still have this.sentryDSN as undefined\n\n\n          if (!_this.sentryInited && sentryEnabled) {\n            _this.sentryInited = true;\n            waitPromise = _this.socket.getObject('system.meta.uuid').then(function (uuidObj) {\n              if (uuidObj && uuidObj[\"native\"] && uuidObj[\"native\"].uuid) {\n                Sentry.configureScope(function (scope) {\n                  return scope.setUser({\n                    id: uuidObj[\"native\"].uuid\n                  });\n                });\n              }\n            });\n          }\n\n          waitPromise = waitPromise || Promise.resolve();\n          waitPromise.then(function () {\n            if (instanceObj) {\n              _this.common = instanceObj === null || instanceObj === void 0 ? void 0 : instanceObj.common;\n\n              _this.onPrepareLoad(instanceObj[\"native\"], instanceObj.encryptedNative); // decode all secrets\n\n\n              _this.savedNative = JSON.parse(JSON.stringify(instanceObj[\"native\"]));\n\n              _this.setState({\n                \"native\": instanceObj[\"native\"],\n                loaded: true,\n                expertMode: _this.getExpertMode()\n              }, function () {\n                return _this.onConnectionReady && _this.onConnectionReady();\n              });\n            } else {\n              console.warn('Cannot load instance settings');\n\n              _this.setState({\n                \"native\": {},\n                loaded: true,\n                expertMode: _this.getExpertMode()\n              }, function () {\n                return _this.onConnectionReady && _this.onConnectionReady();\n              });\n            }\n          });\n        });\n      },\n      onError: function onError(err) {\n        console.error(err);\n\n        _this.showError(err);\n      }\n    }));\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(GenericApp, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n     */\n    function componentDidMount() {\n      window.addEventListener('resize', this.onResize, true);\n      window.addEventListener('message', this.onReceiveMessage, false);\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(GenericApp.prototype), \"componentDidMount\", this).call(this);\n    }\n    /**\n     * Called immediately before a component is destroyed.\n     */\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.onResize, true);\n      window.removeEventListener('message', this.onReceiveMessage, false);\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(GenericApp.prototype), \"componentWillUnmount\", this).call(this);\n    }\n  }, {\n    key: \"createTheme\",\n    value:\n    /**\n     * Get a theme\n     * @param {string} name Theme name\n     * @returns {import('./types').Theme}\n     */\n    function createTheme() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return (0, _Theme[\"default\"])(_Utils[\"default\"].getThemeName(name));\n    }\n    /**\n     * Get the theme name\n     * @param {import('./types').Theme} theme Theme\n     * @returns {string} Theme name\n     */\n\n  }, {\n    key: \"getThemeName\",\n    value: function getThemeName(theme) {\n      return theme.name;\n    }\n    /**\n     * Get the theme type\n     * @param {import('./types').Theme} theme Theme\n     * @returns {string} Theme type\n     */\n\n  }, {\n    key: \"getThemeType\",\n    value: function getThemeType(theme) {\n      return theme.palette.type;\n    }\n    /**\n     * Changes the current theme\n     */\n\n  }, {\n    key: \"toggleTheme\",\n    value: function toggleTheme() {\n      var _this2 = this;\n\n      var themeName = this.state.themeName; // dark => blue => colored => light => dark\n\n      var newThemeName = themeName === 'dark' ? 'blue' : themeName === 'blue' ? 'colored' : themeName === 'colored' ? 'light' : 'dark';\n\n      _Utils[\"default\"].setThemeName(newThemeName);\n\n      var theme = this.createTheme(newThemeName);\n      this.setState({\n        theme: theme,\n        themeName: this.getThemeName(theme),\n        themeType: this.getThemeType(theme)\n      }, function () {\n        _this2.props.onThemeChange && _this2.props.onThemeChange(newThemeName);\n        _this2.onThemeChanged && _this2.onThemeChanged(newThemeName);\n      });\n    }\n    /**\n     * Gets the system configuration.\n     * @returns {Promise<ioBroker.OtherObject>}\n     */\n\n  }, {\n    key: \"getSystemConfig\",\n    value: function getSystemConfig() {\n      return this.socket.getSystemConfig();\n    }\n    /**\n     * Get current expert mode\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"getExpertMode\",\n    value: function getExpertMode() {\n      return window.sessionStorage.getItem('App.expertMode') === 'true' || !!this._systemConfig.expertMode;\n    }\n    /**\n     * Gets called when the socket.io connection is ready.\n     * You can overload this function to execute own commands.\n     */\n\n  }, {\n    key: \"onConnectionReady\",\n    value: function onConnectionReady() {}\n    /**\n     * Encrypts a string.\n     * @param {string} value\n     * @returns {string}\n     */\n\n  }, {\n    key: \"encrypt\",\n    value: function encrypt(value) {\n      var result = '';\n\n      for (var i = 0; i < value.length; i++) {\n        result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n      }\n\n      return result;\n    }\n    /**\n     * Decrypts a string.\n     * @param {string} value\n     * @returns {string}\n     */\n\n  }, {\n    key: \"decrypt\",\n    value: function decrypt(value) {\n      var result = '';\n\n      for (var i = 0; i < value.length; i++) {\n        result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n      }\n\n      return result;\n    }\n    /**\n     * Gets called when the navigation hash changes.\n     * You may override this if needed.\n     */\n\n  }, {\n    key: \"onHashChanged\",\n    value: function onHashChanged() {\n      var location = _Router2[\"default\"].getLocation();\n\n      if (location.tab !== this.state.selectedTab) {\n        this.selectTab(location.tab);\n      }\n    }\n    /**\n     * Selects the given tab.\n     * @param {string} tab\n     * @param {number} [index]\n     */\n\n  }, {\n    key: \"selectTab\",\n    value: function selectTab(tab, index) {\n      window.localStorage[this.adapterName + '-adapter'] = tab;\n      this.setState({\n        selectedTab: tab,\n        selectedTabNum: index\n      });\n    }\n    /**\n     * Gets called before the settings are saved.\n     * You may override this if needed.\n     * @param {Record<string, any>} settings\n     */\n\n  }, {\n    key: \"onPrepareSave\",\n    value: function onPrepareSave(settings) {\n      var _this3 = this;\n\n      // here you can encode values\n      this.encryptedFields && this.encryptedFields.forEach(function (attr) {\n        if (settings[attr]) {\n          settings[attr] = _this3.encrypt(settings[attr]);\n        }\n      });\n      return true;\n    }\n    /**\n     * Gets called after the settings are loaded.\n     * You may override this if needed.\n     * @param {Record<string, any>} settings\n     * @param {string[]} encryptedNative optional list of fields to be decrypted\n     */\n\n  }, {\n    key: \"onPrepareLoad\",\n    value: function onPrepareLoad(settings, encryptedNative) {\n      var _this4 = this;\n\n      // here you can encode values\n      this.encryptedFields && this.encryptedFields.forEach(function (attr) {\n        if (settings[attr]) {\n          settings[attr] = _this4.decrypt(settings[attr]);\n        }\n      });\n      encryptedNative && encryptedNative.forEach(function (attr) {\n        _this4.encryptedFields = _this4.encryptedFields || [];\n        !_this4.encryptedFields.includes(attr) && _this4.encryptedFields.push(attr);\n\n        if (settings[attr]) {\n          settings[attr] = _this4.decrypt(settings[attr]);\n        }\n      });\n    }\n    /**\n     * Gets the extendable instances.\n     * @returns {Promise<any[]>}\n     */\n\n  }, {\n    key: \"getExtendableInstances\",\n    value: function getExtendableInstances() {\n      var _this5 = this;\n\n      return new Promise(function (resolve) {\n        _this5.socket._socket.emit('getObjectView', 'system', 'instance', null, function (err, doc) {\n          if (err) {\n            resolve([]);\n          } else {\n            resolve(doc.rows.filter(function (item) {\n              return item.value.common.webExtendable;\n            }).map(function (item) {\n              return item.value;\n            }));\n          }\n        });\n      });\n    }\n    /**\n     * Gets the IP addresses of the given host.\n     * @param {string} host\n     */\n\n  }, {\n    key: \"getIpAddresses\",\n    value: function getIpAddresses(host) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this6.socket._socket.emit('getHostByIp', host || _this6.common.host, function (ip, _host) {\n          var IPs4 = [{\n            name: '[IPv4] 0.0.0.0 - ' + _i18n[\"default\"].t('ra_Listen on all IPs'),\n            address: '0.0.0.0',\n            family: 'ipv4'\n          }];\n          var IPs6 = [{\n            name: '[IPv6] ::',\n            address: '::',\n            family: 'ipv6'\n          }];\n\n          if (_host) {\n            host = _host;\n\n            if (host[\"native\"].hardware && host[\"native\"].hardware.networkInterfaces) {\n              Object.keys(host[\"native\"].hardware.networkInterfaces).forEach(function (eth) {\n                return host[\"native\"].hardware.networkInterfaces[eth].forEach(function (inter) {\n                  if (inter.family !== 'IPv6') {\n                    IPs4.push({\n                      name: '[' + inter.family + '] ' + inter.address + ' - ' + eth,\n                      address: inter.address,\n                      family: 'ipv4'\n                    });\n                  } else {\n                    IPs6.push({\n                      name: '[' + inter.family + '] ' + inter.address + ' - ' + eth,\n                      address: inter.address,\n                      family: 'ipv6'\n                    });\n                  }\n                });\n              });\n            }\n\n            IPs6.forEach(function (ip) {\n              return IPs4.push(ip);\n            });\n          }\n\n          resolve(IPs4);\n        });\n      });\n    }\n    /**\n     * Saves the settings to the server.\n     * @param {boolean} isClose True if the user is closing the dialog.\n     */\n\n  }, {\n    key: \"onSave\",\n    value: function onSave(isClose) {\n      var _this7 = this;\n\n      var oldObj;\n\n      if (this.state.isConfigurationError) {\n        this.setState({\n          errorText: this.state.isConfigurationError\n        });\n        return;\n      }\n\n      this.socket.getObject(this.instanceId).then(function (_oldObj) {\n        oldObj = _oldObj || {};\n\n        for (var a in _this7.state[\"native\"]) {\n          if (_this7.state[\"native\"].hasOwnProperty(a)) {\n            if (_this7.state[\"native\"][a] === null) {\n              oldObj[\"native\"][a] = null;\n            } else if (_this7.state[\"native\"][a] !== undefined) {\n              oldObj[\"native\"][a] = JSON.parse(JSON.stringify(_this7.state[\"native\"][a]));\n            } else {\n              delete oldObj[\"native\"][a];\n            }\n          }\n        }\n\n        if (_this7.state.common) {\n          for (var b in _this7.state.common) {\n            if (_this7.state.common[b] === null) {\n              oldObj.common[b] = null;\n            } else if (_this7.state.common[b] !== undefined) {\n              oldObj.common[b] = JSON.parse(JSON.stringify(_this7.state.common[b]));\n            } else {\n              delete oldObj.common[b];\n            }\n          }\n        }\n\n        if (_this7.onPrepareSave(oldObj[\"native\"]) !== false) {\n          return _this7.socket.setObject(_this7.instanceId, oldObj);\n        } else {\n          return Promise.reject('Invalid configuration');\n        }\n      }).then(function () {\n        _this7.savedNative = oldObj[\"native\"];\n        globalThis.changed = false;\n\n        _this7.setState({\n          changed: false\n        });\n\n        isClose && GenericApp.onClose();\n      })[\"catch\"](function (e) {\n        console.error(\"Cannot save configuration: \".concat(e));\n      });\n    }\n    /**\n     * Renders the toast.\n     * @returns {JSX.Element | null} The JSX element.\n     */\n\n  }, {\n    key: \"renderToast\",\n    value: function renderToast() {\n      var _this8 = this;\n\n      if (!this.state.toast) return null;\n      return /*#__PURE__*/_react[\"default\"].createElement(_Snackbar[\"default\"], {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: true,\n        autoHideDuration: 6000,\n        onClose: function onClose() {\n          return _this8.setState({\n            toast: ''\n          });\n        },\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n          id: \"message-id\"\n        }, this.state.toast),\n        action: [/*#__PURE__*/_react[\"default\"].createElement(_IconButton[\"default\"], {\n          key: \"close\",\n          \"aria-label\": \"Close\",\n          color: \"inherit\",\n          className: this.props.classes.close,\n          onClick: function onClick() {\n            return _this8.setState({\n              toast: ''\n            });\n          }\n        }, /*#__PURE__*/_react[\"default\"].createElement(_Close[\"default\"], null))]\n      });\n    }\n    /**\n     * Closes the dialog.\n     * @private\n     */\n\n  }, {\n    key: \"renderError\",\n    value:\n    /**\n     * Renders the error dialog.\n     * @returns {JSX.Element | null} The JSX element.\n     */\n    function renderError() {\n      var _this9 = this;\n\n      if (!this.state.errorText) {\n        return null;\n      } else {\n        return /*#__PURE__*/_react[\"default\"].createElement(_Error[\"default\"], {\n          text: this.state.errorText,\n          onClose: function onClose() {\n            return _this9.setState({\n              errorText: ''\n            });\n          }\n        });\n      }\n    }\n    /**\n     * Checks if the configuration has changed.\n     * @param {Record<string, any>} [native] the new state\n     */\n\n  }, {\n    key: \"getIsChanged\",\n    value: function getIsChanged(_native) {\n      _native = _native || this.state[\"native\"];\n      var isChanged = JSON.stringify(_native) !== JSON.stringify(this.savedNative);\n\n      if (isChanged) {\n        globalThis.changed = true;\n      } else {\n        globalThis.changed = false;\n      }\n\n      return isChanged;\n    }\n    /**\n     * Gets called when loading the configuration.\n     * @param {Record<string, any>} newNative The new configuration object.\n     */\n\n  }, {\n    key: \"onLoadConfig\",\n    value: function onLoadConfig(newNative) {\n      if (JSON.stringify(newNative) !== JSON.stringify(this.state[\"native\"])) {\n        this.setState({\n          \"native\": newNative,\n          changed: this.getIsChanged(newNative)\n        });\n      }\n    }\n    /**\n     * Sets the configuration error.\n     * @param {string} errorText\n     */\n\n  }, {\n    key: \"setConfigurationError\",\n    value: function setConfigurationError(errorText) {\n      if (this.state.isConfigurationError !== errorText) {\n        this.setState({\n          isConfigurationError: errorText\n        });\n      }\n    }\n    /**\n     * Renders the save and close buttons.\n     * @returns {JSX.Element | undefined} The JSX element.\n     */\n\n  }, {\n    key: \"renderSaveCloseButtons\",\n    value: function renderSaveCloseButtons() {\n      var _this10 = this;\n\n      if (this.state.bottomButtons) {\n        return /*#__PURE__*/_react[\"default\"].createElement(_SaveCloseButtons[\"default\"], {\n          theme: this.state.theme,\n          newReact: this.newReact,\n          noTextOnButtons: this.state.width === 'xs' || this.state.width === 'sm' || this.state.width === 'md',\n          changed: this.state.changed,\n          onSave: function onSave(isClose) {\n            return _this10.onSave(isClose);\n          },\n          onClose: function onClose() {\n            return GenericApp.onClose();\n          }\n        });\n      } else {\n        return null;\n      }\n    }\n    /**\n     * @private\n     * @param {Record<string, any>} obj\n     * @param {any} attrs\n     * @param {any} value\n     * @returns {boolean | undefined}\n     */\n\n  }, {\n    key: \"_updateNativeValue\",\n    value: function _updateNativeValue(obj, attrs, value) {\n      if ((0, _typeof2[\"default\"])(attrs) !== 'object') {\n        attrs = attrs.split('.');\n      }\n\n      var attr = attrs.shift();\n\n      if (!attrs.length) {\n        if (value && (0, _typeof2[\"default\"])(value) === 'object') {\n          if (JSON.stringify(obj[attr]) !== JSON.stringify(value)) {\n            obj[attr] = value;\n            return true;\n          }\n        } else if (obj[attr] !== value) {\n          obj[attr] = value;\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        obj[attr] = obj[attr] || {};\n\n        if ((0, _typeof2[\"default\"])(obj[attr]) !== 'object') {\n          throw new Error('attribute ' + attr + ' is no object, but ' + (0, _typeof2[\"default\"])(obj[attr]));\n        }\n\n        return this._updateNativeValue(obj[attr], attrs, value);\n      }\n    }\n    /**\n     * Update the native value\n     * @param {string} attr The attribute name with dots as delimiter.\n     * @param {any} value The new value.\n     * @param {(() => void)} [cb] Callback which will be called upon completion.\n     */\n\n  }, {\n    key: \"updateNativeValue\",\n    value: function updateNativeValue(attr, value, cb) {\n      var _native2 = JSON.parse(JSON.stringify(this.state[\"native\"]));\n\n      if (this._updateNativeValue(_native2, attr, value)) {\n        var changed = this.getIsChanged(_native2);\n        this.setState({\n          \"native\": _native2,\n          changed: changed\n        }, cb);\n      }\n    }\n    /**\n     * Set the error text to be shown.\n     * @param {string | JSX.Element} text\n     */\n\n  }, {\n    key: \"showError\",\n    value: function showError(text) {\n      this.setState({\n        errorText: text\n      });\n    }\n    /**\n     * Sets the toast to be shown.\n     * @param {string} toast\n     */\n\n  }, {\n    key: \"showToast\",\n    value: function showToast(toast) {\n      this.setState({\n        toast: toast\n      });\n    }\n    /**\n     * Renders this component.\n     * @returns {JSX.Element} The JSX element.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.loaded) {\n        return /*#__PURE__*/_react[\"default\"].createElement(_Loader[\"default\"], {\n          theme: this.state.themeType\n        });\n      }\n\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        className: \"App\"\n      }, this.renderError(), this.renderToast(), this.renderSaveCloseButtons());\n    }\n  }], [{\n    key: \"getWidth\",\n    value:\n    /**\n     * Gets the width depending on the window inner width.\n     * @returns {import('./types').Width}\n     */\n    function getWidth() {\n      /**\n       * innerWidth |xs      sm      md      lg      xl\n       *            |-------|-------|-------|-------|------>\n       * width      |  xs   |  sm   |  md   |  lg   |  xl\n       */\n      var SIZES = {\n        xs: 0,\n        sm: 600,\n        md: 960,\n        lg: 1280,\n        xl: 1920\n      };\n      var width = window.innerWidth;\n      var keys = Object.keys(SIZES).reverse();\n      var widthComputed = keys.find(function (key) {\n        return width >= SIZES[key];\n      });\n      return widthComputed || 'xs';\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      if (typeof window.parent !== 'undefined' && window.parent) {\n        try {\n          if (window.parent.$iframeDialog && typeof window.parent.$iframeDialog.close === 'function') {\n            window.parent.$iframeDialog.close();\n          } else {\n            window.parent.postMessage('close', '*');\n          }\n        } catch (e) {\n          window.parent.postMessage('close', '*');\n        }\n      }\n    }\n  }]);\n  return GenericApp;\n}(_Router2[\"default\"]);\n\nGenericApp.propTypes = {\n  adapterName: _propTypes[\"default\"].string,\n  // (optional) name of adapter\n  onThemeChange: _propTypes[\"default\"].func,\n  // (optional) called by theme change\n  socket: _propTypes[\"default\"].object,\n  // (optional) socket information (host, port)\n  encryptedFields: _propTypes[\"default\"].array,\n  // (optional) list of native attributes, that must be encrypted\n  bottomButtons: _propTypes[\"default\"].bool // If the bottom buttons (Save/Close) must be shown\n\n};\nvar _default = GenericApp;\nexports[\"default\"] = _default;\n\n"},"sourceMaps":{"js":{"version":3,"sources":["GenericApp.js"],"names":["window","localStorage","getItem","setItem","GenericApp","props","settings","Connection","isWeb","io","location","port","SocketClient","e","id","obj","socket","systemLang","common","language","I18n","setLanguage","_systemConfig","expertMode","setState","getExpertMode","message","data","newThemeName","Utils","getThemeName","setThemeName","theme","createTheme","themeName","themeType","getThemeType","onThemeChange","onThemeChanged","onToggleExpertMode","console","warn","JSON","stringify","resizeTimer","clearTimeout","setTimeout","width","getWidth","query","search","replace","args","trim","split","filter","t","forEach","b","parts","length","instance","undefined","parseInt","slice","tmp","pathname","adapterName","instanceId","newReact","Router","getLocation","tab","themeInstance","state","selectedTab","selectedTabNum","errorText","changed","connected","loaded","isConfigurationError","toast","bottomButtons","translations","require","Object","keys","lang","assign","setTranslations","savedNative","encryptedFields","sentryDSN","name","doNotLoadAllObjects","onProgress","progress","PROGRESS","CONNECTING","READY","onReady","objects","scripts","subscribeObject","onSystemConfigChanged","then","getSystemConfig","_secret","secret","getObject","instanceObj","waitPromise","sentryEnabled","diag","version","disableDataReporting","host","sentryStarted","Sentry","init","dsn","release","integrations","SentryIntegrations","Dedupe","sentryInited","uuidObj","uuid","configureScope","scope","setUser","Promise","resolve","onPrepareLoad","encryptedNative","parse","onConnectionReady","onError","err","error","showError","addEventListener","onResize","onReceiveMessage","removeEventListener","palette","type","sessionStorage","value","result","i","String","fromCharCode","charCodeAt","selectTab","index","attr","encrypt","decrypt","includes","push","_socket","emit","doc","rows","item","webExtendable","map","reject","ip","_host","IPs4","address","family","IPs6","hardware","networkInterfaces","eth","inter","isClose","oldObj","_oldObj","a","hasOwnProperty","onPrepareSave","setObject","globalThis","onClose","vertical","horizontal","classes","close","native","isChanged","newNative","getIsChanged","onSave","attrs","shift","Error","_updateNativeValue","cb","text","renderError","renderToast","renderSaveCloseButtons","SIZES","xs","sm","md","lg","xl","innerWidth","reverse","widthComputed","find","key","parent","$iframeDialog","postMessage","propTypes","PropTypes","string","func","object","array","bool"],"mappings":"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","sourcesContent":["/**\n * Copyright 2018-2021 bluefox <dogafox@gmail.com>\n *\n * MIT License\n *\n **/\nimport React from 'react';\nimport Connection, {PROGRESS} from './Connection';\nimport PropTypes from 'prop-types';\nimport * as Sentry from '@sentry/browser';\nimport * as SentryIntegrations from '@sentry/integrations';\n\nimport DialogError from './Dialogs/Error';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport IconClose from '@material-ui/icons/Close';\n\nimport printPrompt from './Prompt';\nimport theme from './Theme';\nimport Loader from './Components/Loader';\nimport Router from './Components/Router';\nimport Utils from './Components/Utils';\nimport SaveCloseButtons from './Components/SaveCloseButtons';\nimport I18n from './i18n';\n\nimport './index.css';\n\nif (!window.localStorage) {\n    window.localStorage = {\n        getItem: () => null,\n        setItem: () => null,\n    };\n}\n\n/**\n * @extends {Router<import('./types').GenericAppProps, import('./types').GenericAppState>}\n */\nclass GenericApp extends Router {\n    /**\n     * @param {import('./types').GenericAppProps} props\n     * @param {import('./types').GenericAppSettings | undefined} settings\n     */\n    constructor(props, settings) {\n        // Remove `!Connection.isWeb() && window.adapterName !== 'material'` when iobroker.socket will support native ws\n        if (!Connection.isWeb() && window.io && window.location.port === '3000') {\n            try {\n                const io = new window.SocketClient();\n                delete window.io;\n                window.io = io;\n            } catch (e) {\n                // ignore\n            }\n        }\n\n        super(props);\n\n        printPrompt();\n\n        let query = (window.location.search || '').replace(/^\\?/, '').replace(/#.*$/, '');\n        let args = {};\n        query.trim().split('&').filter(t => t.trim()).forEach(b => {\n            const parts = b.split('=');\n            args[parts[0]] = parts.length === 2 ? parts[1] : true;\n            if (args[parts[0]] === 'true') {\n                args[parts[0]] = true;\n            } else if (args[parts[0]] === 'false') {\n                args[parts[0]] = false;\n            }\n        });\n\n        // extract instance from URL\n        this.instance = args.instance !== undefined ? parseInt(args.instance, 10) || 0 : (parseInt(window.location.search.slice(1), 10) || 0);\n        // extract adapter name from URL\n        const tmp = window.location.pathname.split('/');\n        this.adapterName = settings?.adapterName || props.adapterName || window.adapterName || tmp[tmp.length - 2] || 'iot';\n        this.instanceId  = `system.adapter.${this.adapterName}.${this.instance}`;\n        this.newReact = args.newReact === true; // it is admin5\n\n        const location = Router.getLocation();\n        location.tab = location.tab || window.localStorage.getItem(this.adapterName + '-adapter') || '';\n\n        const themeInstance = this.createTheme();\n\n        this.state = {\n            selectedTab:    window.localStorage.getItem(this.adapterName + '-adapter') || '',\n            selectedTabNum: -1,\n            native:         {},\n            errorText:      '',\n            changed:        false,\n            connected:      false,\n            loaded:         false,\n            isConfigurationError: '',\n            expertMode:     false,\n            toast:          '',\n            theme:          themeInstance,\n            themeName:      this.getThemeName(themeInstance),\n            themeType:      this.getThemeType(themeInstance),\n            bottomButtons:  (settings && settings.bottomButtons) === false ? false : ((props && props.bottomButtons) === false ? false : true),\n            width:          GenericApp.getWidth(),\n        };\n\n        // init translations\n        const translations = {\n            'en': require('./i18n/en.json'),\n            'de': require('./i18n/de.json'),\n            'ru': require('./i18n/ru.json'),\n            'pt': require('./i18n/pt.json'),\n            'nl': require('./i18n/nl.json'),\n            'fr': require('./i18n/fr.json'),\n            'it': require('./i18n/it.json'),\n            'es': require('./i18n/es.json'),\n            'pl': require('./i18n/pl.json'),\n            'zh-cn': require('./i18n/zh-cn.json'),\n        };\n\n        // merge together\n        if (settings && settings.translations) {\n            Object.keys(settings.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], settings.translations[lang]));\n        } else if (props.translations) {\n            Object.keys(props.translations).forEach(lang => translations[lang] = Object.assign(translations[lang], props.translations[lang]));\n        }\n\n        I18n.setTranslations(translations);\n\n        this.savedNative = {}; // to detect if the config changed\n\n        this.encryptedFields = props.encryptedFields || settings?.encryptedFields || [];\n\n        this.sentryDSN = (settings && settings.sentryDSN) || props.sentryDSN;\n\n        this.socket = new Connection({\n            ...(props?.socket || settings?.socket),\n            name: this.adapterName,\n            doNotLoadAllObjects: settings?.doNotLoadAllObjects,\n            onProgress: progress => {\n                if (progress === PROGRESS.CONNECTING) {\n                    this.setState({connected: false});\n                } else if (progress === PROGRESS.READY) {\n                    this.setState({connected: true});\n                } else {\n                    this.setState({connected: true});\n                }\n            },\n            onReady: (objects, scripts) => {\n                I18n.setLanguage(this.socket.systemLang);\n\n                // subscribe because of language and expert mode\n                this.socket.subscribeObject('system.config', this.onSystemConfigChanged)\n                    .then(() => this.getSystemConfig())\n                    .then(obj => {\n                        this._secret = (typeof obj !== 'undefined' && obj.native && obj.native.secret) || 'Zgfr56gFe87jJOM';\n                        this._systemConfig = obj?.common || {};\n                        return this.socket.getObject(this.instanceId);\n                    })\n                    .then(instanceObj => {\n                        let waitPromise;\n\n                        const sentryEnabled =\n                            this._systemConfig.diag !== 'none' &&\n                            instanceObj &&\n                            instanceObj.common &&\n                            instanceObj.common.name &&\n                            instanceObj.common.version &&\n                            !instanceObj.common.disableDataReporting &&\n                            window.location.host !== 'localhost:3000';\n\n                        // activate sentry plugin\n                        if (!this.sentryStarted && this.sentryDSN && sentryEnabled) {\n                            this.sentryStarted = true;\n\n                            Sentry.init({\n                                dsn: this.sentryDSN,\n                                release: `iobroker.${instanceObj.common.name}@${instanceObj.common.version}`,\n                                integrations: [\n                                    new SentryIntegrations.Dedupe()\n                                ]\n                            });\n                        }\n\n                        // read UUID and init sentry with it.\n                        // for backward compatibility it will be processed separately from above logic: some adapters could still have this.sentryDSN as undefined\n                        if (!this.sentryInited && sentryEnabled) {\n                            this.sentryInited = true;\n\n                            waitPromise = this.socket.getObject('system.meta.uuid')\n                                .then(uuidObj => {\n                                    if (uuidObj && uuidObj.native && uuidObj.native.uuid) {\n                                        Sentry.configureScope(scope =>\n                                            scope.setUser({id: uuidObj.native.uuid}));\n                                    }\n                                });\n                        }\n\n                        waitPromise = waitPromise || Promise.resolve();\n\n                        waitPromise\n                            .then(() => {\n                                if (instanceObj) {\n                                    this.common = instanceObj?.common;\n                                    this.onPrepareLoad(instanceObj.native, instanceObj.encryptedNative); // decode all secrets\n                                    this.savedNative = JSON.parse(JSON.stringify(instanceObj.native));\n                                    this.setState({native: instanceObj.native, loaded: true, expertMode: this.getExpertMode()}, () =>\n                                        this.onConnectionReady && this.onConnectionReady());\n                                } else {\n                                    console.warn('Cannot load instance settings');\n                                    this.setState({native: {}, loaded: true, expertMode: this.getExpertMode()}, () => this.onConnectionReady && this.onConnectionReady());\n                                }\n                            });\n                    });\n            },\n            onError: err => {\n                console.error(err);\n                this.showError(err);\n            }\n        });\n    }\n\n    onSystemConfigChanged = (id, obj) => {\n        if (obj && id === 'system.config') {\n            if (this.socket.systemLang !== obj?.common.language) {\n                this.socket.systemLang = obj?.common.language || 'en';\n                I18n.setLanguage(this.socket.systemLang);\n            }\n\n            if (this._systemConfig.expertMode !== !!obj?.common?.expertMode) {\n                this._systemConfig = obj?.common || {};\n                this.setState({expertMode: this.getExpertMode()});\n            } else {\n                this._systemConfig = obj?.common || {};\n            }\n        }\n    }\n\n    /**\n     * Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n     */\n    componentDidMount() {\n        window.addEventListener('resize', this.onResize, true);\n        window.addEventListener('message', this.onReceiveMessage, false);\n        super.componentDidMount();\n    }\n\n    /**\n     * Called immediately before a component is destroyed.\n     */\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onResize, true);\n        window.removeEventListener('message', this.onReceiveMessage, false);\n        super.componentWillUnmount();\n    }\n\n    onReceiveMessage = message => {\n        if (message?.data) {\n            if (message.data === 'updateTheme') {\n                const newThemeName = Utils.getThemeName()\n                Utils.setThemeName(Utils.getThemeName());\n\n                const theme = this.createTheme(newThemeName);\n\n                this.setState({\n                    theme,\n                    themeName: this.getThemeName(theme),\n                    themeType: this.getThemeType(theme)\n                }, () => {\n                    this.props.onThemeChange && this.props.onThemeChange(newThemeName);\n                    this.onThemeChanged && this.onThemeChanged(newThemeName);\n                });\n            } else if (message.data === 'updateExpertMode') {\n                this.onToggleExpertMode && this.onToggleExpertMode(this.getExpertMode());\n            } else {\n                console.warn('Received unknown message: ' + JSON.stringify(message.data));\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    onResize = () => {\n        this.resizeTimer && clearTimeout(this.resizeTimer);\n        this.resizeTimer = setTimeout(() => {\n            this.resizeTimer = null;\n            this.setState({width: GenericApp.getWidth()});\n        }, 200);\n    };\n\n    /**\n     * Gets the width depending on the window inner width.\n     * @returns {import('./types').Width}\n     */\n    static getWidth() {\n        /**\n         * innerWidth |xs      sm      md      lg      xl\n         *            |-------|-------|-------|-------|------>\n         * width      |  xs   |  sm   |  md   |  lg   |  xl\n         */\n\n        const SIZES = {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920\n        };\n        const width = window.innerWidth;\n        const keys = Object.keys(SIZES).reverse();\n        const widthComputed = keys.find(key => width >= SIZES[key]);\n\n        return widthComputed || 'xs';\n    }\n\n    /**\n     * Get a theme\n     * @param {string} name Theme name\n     * @returns {import('./types').Theme}\n     */\n    createTheme(name = '') {\n        return theme(Utils.getThemeName(name));\n    }\n\n    /**\n     * Get the theme name\n     * @param {import('./types').Theme} theme Theme\n     * @returns {string} Theme name\n     */\n    getThemeName(theme) {\n        return theme.name;\n    }\n\n    /**\n     * Get the theme type\n     * @param {import('./types').Theme} theme Theme\n     * @returns {string} Theme type\n     */\n    getThemeType(theme) {\n        return theme.palette.type;\n    }\n\n    /**\n     * Changes the current theme\n     */\n    toggleTheme() {\n        const themeName = this.state.themeName;\n\n        // dark => blue => colored => light => dark\n        const newThemeName = themeName === 'dark' ? 'blue' :\n            (themeName === 'blue' ? 'colored' :\n                (themeName === 'colored' ? 'light' : 'dark'));\n\n        Utils.setThemeName(newThemeName);\n\n        const theme = this.createTheme(newThemeName);\n\n        this.setState({\n            theme,\n            themeName: this.getThemeName(theme),\n            themeType: this.getThemeType(theme)\n        }, () => {\n            this.props.onThemeChange && this.props.onThemeChange(newThemeName);\n            this.onThemeChanged && this.onThemeChanged(newThemeName);\n        });\n    }\n\n    /**\n     * Gets the system configuration.\n     * @returns {Promise<ioBroker.OtherObject>}\n     */\n    getSystemConfig() {\n        return this.socket.getSystemConfig();\n    }\n\n    /**\n     * Get current expert mode\n     * @returns {boolean}\n     */\n    getExpertMode() {\n        return window.sessionStorage.getItem('App.expertMode') === 'true' || !!this._systemConfig.expertMode;\n    }\n\n    /**\n     * Gets called when the socket.io connection is ready.\n     * You can overload this function to execute own commands.\n     */\n    onConnectionReady() {\n    }\n\n    /**\n     * Encrypts a string.\n     * @param {string} value\n     * @returns {string}\n     */\n    encrypt(value) {\n        let result = '';\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n        }\n        return result;\n    }\n\n    /**\n     * Decrypts a string.\n     * @param {string} value\n     * @returns {string}\n     */\n    decrypt(value) {\n        let result = '';\n        for (let i = 0; i < value.length; i++) {\n            result += String.fromCharCode(this._secret[i % this._secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n        }\n        return result;\n    }\n\n    /**\n     * Gets called when the navigation hash changes.\n     * You may override this if needed.\n     */\n    onHashChanged() {\n        const location = Router.getLocation();\n        if (location.tab !== this.state.selectedTab) {\n            this.selectTab(location.tab);\n        }\n    }\n\n    /**\n     * Selects the given tab.\n     * @param {string} tab\n     * @param {number} [index]\n     */\n    selectTab(tab, index) {\n        window.localStorage[this.adapterName + '-adapter'] = tab;\n        this.setState({selectedTab: tab, selectedTabNum: index})\n    }\n\n    /**\n     * Gets called before the settings are saved.\n     * You may override this if needed.\n     * @param {Record<string, any>} settings\n     */\n    onPrepareSave(settings) {\n        // here you can encode values\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\n            if (settings[attr]) {\n                settings[attr] = this.encrypt(settings[attr]);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Gets called after the settings are loaded.\n     * You may override this if needed.\n     * @param {Record<string, any>} settings\n     * @param {string[]} encryptedNative optional list of fields to be decrypted\n     */\n    onPrepareLoad(settings, encryptedNative) {\n        // here you can encode values\n        this.encryptedFields && this.encryptedFields.forEach(attr => {\n            if (settings[attr]) {\n                settings[attr] = this.decrypt(settings[attr]);\n            }\n        });\n        encryptedNative && encryptedNative.forEach(attr => {\n            this.encryptedFields = this.encryptedFields || [];\n            !this.encryptedFields.includes(attr) && this.encryptedFields.push(attr);\n            if (settings[attr]) {\n                settings[attr] = this.decrypt(settings[attr]);\n            }\n        });\n    }\n\n    /**\n     * Gets the extendable instances.\n     * @returns {Promise<any[]>}\n     */\n    getExtendableInstances() {\n        return new Promise(resolve => {\n            this.socket._socket.emit('getObjectView', 'system', 'instance', null, (err, doc) => {\n                if (err) {\n                    resolve([]);\n                } else {\n                    resolve(doc.rows.filter(item => item.value.common.webExtendable).map(item => item.value));\n                }\n            });\n        });\n    }\n\n    /**\n     * Gets the IP addresses of the given host.\n     * @param {string} host\n     */\n    getIpAddresses(host) {\n        return new Promise((resolve, reject) => {\n            this.socket._socket.emit('getHostByIp', host || this.common.host, (ip, _host) => {\n                const IPs4 = [{name: '[IPv4] 0.0.0.0 - ' + I18n.t('ra_Listen on all IPs'), address: '0.0.0.0', family: 'ipv4'}];\n                const IPs6 = [{name: '[IPv6] ::',      address: '::',      family: 'ipv6'}];\n                if (_host) {\n                    host = _host;\n                    if (host.native.hardware && host.native.hardware.networkInterfaces) {\n                        Object.keys(host.native.hardware.networkInterfaces).forEach(eth =>\n                            host.native.hardware.networkInterfaces[eth].forEach(inter => {\n                                if (inter.family !== 'IPv6') {\n                                    IPs4.push({name: '[' + inter.family + '] ' + inter.address + ' - ' + eth, address: inter.address, family: 'ipv4'});\n                                } else {\n                                    IPs6.push({name: '[' + inter.family + '] ' + inter.address + ' - ' + eth, address: inter.address, family: 'ipv6'});\n                                }\n                            }));\n                    }\n                    IPs6.forEach(ip => IPs4.push(ip));\n                }\n                resolve(IPs4);\n            });\n        });\n    }\n\n    /**\n     * Saves the settings to the server.\n     * @param {boolean} isClose True if the user is closing the dialog.\n     */\n    onSave(isClose) {\n        let oldObj;\n        if (this.state.isConfigurationError) {\n            this.setState({errorText: this.state.isConfigurationError});\n            return;\n        }\n\n        this.socket.getObject(this.instanceId)\n            .then(_oldObj => {\n                oldObj = _oldObj || {};\n\n                for (const a in this.state.native) {\n                    if (this.state.native.hasOwnProperty(a)) {\n                        if (this.state.native[a] === null) {\n                            oldObj.native[a] = null;\n                        } else\n                        if (this.state.native[a] !== undefined) {\n                            oldObj.native[a] = JSON.parse(JSON.stringify(this.state.native[a]));\n                        } else {\n                            delete oldObj.native[a];\n                        }\n                    }\n                }\n\n                if (this.state.common) {\n                    for (const b in this.state.common) {\n                        if (this.state.common[b] === null) {\n                            oldObj.common[b] = null;\n                        } else\n                        if (this.state.common[b] !== undefined) {\n                            oldObj.common[b] = JSON.parse(JSON.stringify(this.state.common[b]));\n                        } else {\n                            delete oldObj.common[b];\n                        }\n                    }\n                }\n\n                if (this.onPrepareSave(oldObj.native) !== false) {\n                    return this.socket.setObject(this.instanceId, oldObj);\n                } else {\n                    return Promise.reject('Invalid configuration');\n                }\n            })\n            .then(() => {\n                this.savedNative = oldObj.native;\n                globalThis.changed = false;\n                this.setState({changed: false});\n                isClose && GenericApp.onClose();\n            })\n            .catch(e => {\n                console.error(`Cannot save configuration: ${e}`);\n            });\n    }\n\n    /**\n     * Renders the toast.\n     * @returns {JSX.Element | null} The JSX element.\n     */\n    renderToast() {\n        if (!this.state.toast) return null;\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={true}\n                autoHideDuration={6000}\n                onClose={() => this.setState({toast: ''})}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">{this.state.toast}</span>}\n                action={[\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={this.props.classes.close}\n                        onClick={() => this.setState({toast: ''})}\n                    >\n                        <IconClose />\n                    </IconButton>,\n                ]}\n            />);\n    }\n\n    /**\n     * Closes the dialog.\n     * @private\n     */\n    static onClose() {\n        if (typeof window.parent !== 'undefined' && window.parent) {\n            try {\n                if (window.parent.$iframeDialog && typeof window.parent.$iframeDialog.close === 'function') {\n                    window.parent.$iframeDialog.close();\n                } else {\n                    window.parent.postMessage('close', '*');\n                }\n            } catch (e) {\n                window.parent.postMessage('close', '*');\n            }\n        }\n    }\n\n    /**\n     * Renders the error dialog.\n     * @returns {JSX.Element | null} The JSX element.\n     */\n    renderError() {\n        if (!this.state.errorText) {\n            return null;\n        } else {\n            return <DialogError text={this.state.errorText} onClose={() => this.setState({errorText: ''})}/>;\n        }\n    }\n\n    /**\n     * Checks if the configuration has changed.\n     * @param {Record<string, any>} [native] the new state\n     */\n    getIsChanged(native) {\n        native = native || this.state.native;\n        const isChanged =  JSON.stringify(native) !== JSON.stringify(this.savedNative);\n\n        if(isChanged) {\n            globalThis.changed = true;\n        } else {\n            globalThis.changed = false;\n        }\n\n        return isChanged;\n    }\n\n    /**\n     * Gets called when loading the configuration.\n     * @param {Record<string, any>} newNative The new configuration object.\n     */\n    onLoadConfig(newNative) {\n        if (JSON.stringify(newNative) !== JSON.stringify(this.state.native)) {\n            this.setState({native: newNative, changed: this.getIsChanged(newNative)})\n        }\n    }\n\n    /**\n     * Sets the configuration error.\n     * @param {string} errorText\n     */\n    setConfigurationError(errorText) {\n        if (this.state.isConfigurationError !== errorText) {\n            this.setState({isConfigurationError: errorText});\n        }\n    }\n\n    /**\n     * Renders the save and close buttons.\n     * @returns {JSX.Element | undefined} The JSX element.\n     */\n    renderSaveCloseButtons() {\n        if (this.state.bottomButtons) {\n            return <SaveCloseButtons\n                theme={this.state.theme}\n                newReact={this.newReact}\n                noTextOnButtons={this.state.width === 'xs' || this.state.width === 'sm' || this.state.width === 'md'}\n                changed={this.state.changed}\n                onSave={(isClose) => this.onSave(isClose)}\n                onClose={() => GenericApp.onClose()}\n            />;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * @private\n     * @param {Record<string, any>} obj\n     * @param {any} attrs\n     * @param {any} value\n     * @returns {boolean | undefined}\n     */\n    _updateNativeValue(obj, attrs, value) {\n        if (typeof attrs !== 'object') {\n            attrs = attrs.split('.');\n        }\n        const attr = attrs.shift();\n        if (!attrs.length) {\n            if (value && typeof value === 'object') {\n                if (JSON.stringify(obj[attr]) !== JSON.stringify(value)) {\n                    obj[attr] = value;\n                    return true;\n                }\n            } else if (obj[attr] !== value) {\n                obj[attr] = value;\n                return true;\n            } else {\n                return false;\n            }\n\n        } else {\n            obj[attr] = obj[attr] || {};\n            if (typeof obj[attr] !== 'object') {\n                throw new Error('attribute ' + attr + ' is no object, but ' + typeof obj[attr]);\n            }\n            return this._updateNativeValue(obj[attr], attrs, value);\n        }\n    }\n\n    /**\n     * Update the native value\n     * @param {string} attr The attribute name with dots as delimiter.\n     * @param {any} value The new value.\n     * @param {(() => void)} [cb] Callback which will be called upon completion.\n     */\n    updateNativeValue(attr, value, cb) {\n        const native = JSON.parse(JSON.stringify(this.state.native));\n        if (this._updateNativeValue(native, attr, value)) {\n            const changed = this.getIsChanged(native);\n            this.setState({native, changed}, cb);\n        }\n    }\n\n    /**\n     * Set the error text to be shown.\n     * @param {string | JSX.Element} text\n     */\n    showError(text) {\n        this.setState({errorText: text});\n    }\n\n    /**\n     * Sets the toast to be shown.\n     * @param {string} toast\n     */\n    showToast(toast) {\n        this.setState({toast});\n    }\n\n    /**\n     * Renders this component.\n     * @returns {JSX.Element} The JSX element.\n     */\n    render() {\n        if (!this.state.loaded) {\n            return <Loader theme={this.state.themeType}/>;\n        }\n\n        return <div className=\"App\">\n            {this.renderError()}\n            {this.renderToast()}\n            {this.renderSaveCloseButtons()}\n        </div>;\n    }\n}\n\nGenericApp.propTypes = {\n    adapterName: PropTypes.string, // (optional) name of adapter\n    onThemeChange: PropTypes.func, // (optional) called by theme change\n    socket: PropTypes.object, // (optional) socket information (host, port)\n    encryptedFields: PropTypes.array, // (optional) list of native attributes, that must be encrypted\n    bottomButtons: PropTypes.bool, // If the bottom buttons (Save/Close) must be shown\n};\n\nexport default GenericApp;\n"],"file":"GenericApp.js"}},"error":null,"hash":"3f942bfe7901e801282aac8ffcede730","cacheData":{"env":{}}}