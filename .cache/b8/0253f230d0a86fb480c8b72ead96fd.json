{"id":"bJFw","dependencies":[{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/esm/promisebuffer.js.map","includedInParent":true,"mtime":1681998079730},{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/package.json","includedInParent":true,"mtime":1681998828100},{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/package.json","includedInParent":true,"mtime":1681998077302},{"name":"./error","loc":{"line":1,"column":28,"index":28},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/esm/promisebuffer.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/esm/error.js"},{"name":"./syncpromise","loc":{"line":2,"column":70,"index":109},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/esm/promisebuffer.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/esm/syncpromise.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.makePromiseBuffer=n;var e=require(\"./error\"),r=require(\"./syncpromise\");function n(n){var t=[];function i(e){return t.splice(t.indexOf(e),1)[0]}return{$:t,add:function(u){if(!(void 0===n||t.length<n))return(0,r.rejectedSyncPromise)(new e.SentryError(\"Not adding Promise due to buffer limit reached.\"));var o=u();return-1===t.indexOf(o)&&t.push(o),o.then(function(){return i(o)}).then(null,function(){return i(o).then(null,function(){})}),o},drain:function(e){return new r.SyncPromise(function(n,i){var u=t.length;if(!u)return n(!0);var o=setTimeout(function(){e&&e>0&&n(!1)},e);t.forEach(function(e){(0,r.resolvedSyncPromise)(e).then(function(){--u||(clearTimeout(o),n(!0))},i)})})}}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":0}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":20}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":35}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":43}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":56}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":57}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":64}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":68}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":76}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":108,"column":0},"generated":{"line":1,"column":94}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":96}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":100}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":102}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":110}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":121}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":123}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":131}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":1,"column":148}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":1,"column":157}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":16,"column":37},"generated":{"line":1,"column":159}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":17,"column":2},"generated":{"line":1,"column":162}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":1,"column":166}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":17,"column":40},"generated":{"line":1,"column":168}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":1,"column":171}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":29,"column":11},"generated":{"line":1,"column":180}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":29,"column":18},"generated":{"line":1,"column":182}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":1,"column":185}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":1,"column":192}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":30,"column":18},"generated":{"line":1,"column":194}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":1,"column":201}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":30,"column":32},"generated":{"line":1,"column":203}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":30,"column":40},"generated":{"line":1,"column":211}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":30,"column":47},"generated":{"line":1,"column":214}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":30,"column":50},"generated":{"line":1,"column":217}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":103,"column":2},"generated":{"line":1,"column":220}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":103,"column":9},"generated":{"line":1,"column":226}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":104,"column":4},"generated":{"line":1,"column":227}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":104,"column":7},"generated":{"line":1,"column":229}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":105,"column":4},"generated":{"line":1,"column":231}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":1,"column":235}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":43,"column":15},"generated":{"line":1,"column":244}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":1,"column":247}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":20,"column":21},"generated":{"line":1,"column":257}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":20,"column":11},"generated":{"line":1,"column":261}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":20,"column":34},"generated":{"line":1,"column":264}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":20,"column":41},"generated":{"line":1,"column":266}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":20,"column":50},"generated":{"line":1,"column":273}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":45,"column":6},"generated":{"line":1,"column":276}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":1,"column":283}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":1,"column":285}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":45,"column":32},"generated":{"line":1,"column":287}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":45,"column":33},"generated":{"line":1,"column":308}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":45,"column":37},"generated":{"line":1,"column":312}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":45,"column":48},"generated":{"line":1,"column":314}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":45,"column":49},"generated":{"line":1,"column":326}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":1,"column":378}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":1,"column":382}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":1,"column":384}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":1,"column":388}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":50,"column":34},"generated":{"line":1,"column":395}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":1,"column":399}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":50,"column":15},"generated":{"line":1,"column":401}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":50,"column":23},"generated":{"line":1,"column":409}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":1,"column":413}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":51,"column":13},"generated":{"line":1,"column":415}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":51,"column":18},"generated":{"line":1,"column":420}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":53,"column":9},"generated":{"line":1,"column":423}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":54,"column":7},"generated":{"line":1,"column":425}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":54,"column":12},"generated":{"line":1,"column":430}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":54,"column":18},"generated":{"line":1,"column":441}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":54,"column":18},"generated":{"line":1,"column":448}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":54,"column":25},"generated":{"line":1,"column":450}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":58,"column":7},"generated":{"line":1,"column":455}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":58,"column":12},"generated":{"line":1,"column":460}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":1,"column":465}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":59,"column":8},"generated":{"line":1,"column":476}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":59,"column":8},"generated":{"line":1,"column":483}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":59,"column":15},"generated":{"line":1,"column":485}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":59,"column":21},"generated":{"line":1,"column":488}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":59,"column":26},"generated":{"line":1,"column":493}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":59,"column":32},"generated":{"line":1,"column":498}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":63,"column":11},"generated":{"line":1,"column":514}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":106,"column":4},"generated":{"line":1,"column":517}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":1,"column":523}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":75,"column":17},"generated":{"line":1,"column":532}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":1,"column":535}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":76,"column":11},"generated":{"line":1,"column":542}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":76,"column":15},"generated":{"line":1,"column":546}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":76,"column":26},"generated":{"line":1,"column":548}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":76,"column":36},"generated":{"line":1,"column":560}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":76,"column":37},"generated":{"line":1,"column":569}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":76,"column":46},"generated":{"line":1,"column":571}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":77,"column":6},"generated":{"line":1,"column":574}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":77,"column":10},"generated":{"line":1,"column":578}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":77,"column":20},"generated":{"line":1,"column":580}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":77,"column":27},"generated":{"line":1,"column":582}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":79,"column":6},"generated":{"line":1,"column":589}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":79,"column":11},"generated":{"line":1,"column":593}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":80,"column":8},"generated":{"line":1,"column":595}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":80,"column":15},"generated":{"line":1,"column":602}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":80,"column":23},"generated":{"line":1,"column":605}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":84,"column":6},"generated":{"line":1,"column":608}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":84,"column":12},"generated":{"line":1,"column":612}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":84,"column":33},"generated":{"line":1,"column":614}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":84,"column":44},"generated":{"line":1,"column":625}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":85,"column":12},"generated":{"line":1,"column":636}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":85,"column":23},"generated":{"line":1,"column":639}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":85,"column":33},"generated":{"line":1,"column":641}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":86,"column":10},"generated":{"line":1,"column":644}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":86,"column":18},"generated":{"line":1,"column":647}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":88,"column":9},"generated":{"line":1,"column":651}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":91,"column":6},"generated":{"line":1,"column":654}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":91,"column":13},"generated":{"line":1,"column":656}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":91,"column":21},"generated":{"line":1,"column":664}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":91,"column":21},"generated":{"line":1,"column":673}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":92,"column":13},"generated":{"line":1,"column":677}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":92,"column":13},"generated":{"line":1,"column":679}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":92,"column":32},"generated":{"line":1,"column":681}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":92,"column":33},"generated":{"line":1,"column":702}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":92,"column":39},"generated":{"line":1,"column":705}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":92,"column":44},"generated":{"line":1,"column":710}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":94,"column":17},"generated":{"line":1,"column":723}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":95,"column":12},"generated":{"line":1,"column":727}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":95,"column":25},"generated":{"line":1,"column":740}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":96,"column":12},"generated":{"line":1,"column":743}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":96,"column":20},"generated":{"line":1,"column":746}},{"source":"../../src/promisebuffer.ts","name":null,"original":{"line":98,"column":11},"generated":{"line":1,"column":751}}],"sources":{"../../src/promisebuffer.ts":"import { SentryError } from './error';\nimport { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          // eslint-disable-next-line no-plusplus\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"cfc8661df9c46dc2305ecf0c3f8aa625","cacheData":{"env":{}}}