{"id":"../../node_modules/@sentry/utils/esm/node.js","dependencies":[{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/esm/node.js.map","includedInParent":true,"mtime":1681998078762},{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/package.json","includedInParent":true,"mtime":1681998828100},{"name":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/package.json","includedInParent":true,"mtime":1681998077302},{"name":"./env","loc":{"line":5,"column":32,"index":259},"parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/esm/node.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/esm/env.js"},{"name":"process","parent":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/@sentry/utils/esm/node.js","resolved":"/home/pi/ioBroker.atlas-scientific-ezo-i2c/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dynamicRequire = dynamicRequire;\nexports.isNodeEnv = isNodeEnv;\nexports.loadModule = loadModule;\nvar _env = require(\"./env\");\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return !(0, _env.isBrowserBundle)() && Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  var mod;\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n  try {\n    var cwd = dynamicRequire(module, 'process').cwd;\n    mod = dynamicRequire(module, cwd() + \"/node_modules/\" + moduleName);\n  } catch (e) {\n    // no-empty\n  }\n  return mod;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/node.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":4}},{"source":"../../src/node.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":8}},{"source":"../../src/node.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":11}},{"source":"../../src/node.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":18}},{"source":"../../src/node.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":16,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":13,"column":6},"generated":{"line":21,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":21,"column":9}},{"source":"../../src/node.ts","name":null,"original":{"line":13,"column":25},"generated":{"line":21,"column":18}},{"source":"../../src/node.ts","name":null,"original":{"line":13,"column":25},"generated":{"line":21,"column":19}},{"source":"../../src/node.ts","name":null,"original":{"line":13,"column":25},"generated":{"line":21,"column":21}},{"source":"../../src/node.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":22,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":23,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":24,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":24,"column":9}},{"source":"../../src/node.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":24,"column":10}},{"source":"../../src/node.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":24,"column":14}},{"source":"../../src/node.ts","name":null,"original":{"line":17,"column":20},"generated":{"line":24,"column":34}},{"source":"../../src/node.ts","name":null,"original":{"line":17,"column":22},"generated":{"line":24,"column":37}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":24,"column":41}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":10},"generated":{"line":24,"column":47}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":24,"column":48}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":20},"generated":{"line":24,"column":57}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":21},"generated":{"line":24,"column":58}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":29},"generated":{"line":24,"column":66}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":30},"generated":{"line":24,"column":67}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":34},"generated":{"line":24,"column":71}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":35},"generated":{"line":24,"column":72}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":42},"generated":{"line":24,"column":79}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":49},"generated":{"line":24,"column":86}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":54},"generated":{"line":24,"column":91}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":65},"generated":{"line":24,"column":102}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":68},"generated":{"line":24,"column":105}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":75},"generated":{"line":24,"column":112}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":78},"generated":{"line":24,"column":115}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":79},"generated":{"line":24,"column":116}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":80},"generated":{"line":24,"column":117}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":85},"generated":{"line":24,"column":122}},{"source":"../../src/node.ts","name":null,"original":{"line":18,"column":103},"generated":{"line":24,"column":140}},{"source":"../../src/node.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":25,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":26,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":31,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":32,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":28,"column":16},"generated":{"line":32,"column":9}},{"source":"../../src/node.ts","name":null,"original":{"line":28,"column":30},"generated":{"line":32,"column":23}},{"source":"../../src/node.ts","name":null,"original":{"line":28,"column":31},"generated":{"line":32,"column":24}},{"source":"../../src/node.ts","name":null,"original":{"line":28,"column":39},"generated":{"line":32,"column":27}},{"source":"../../src/node.ts","name":null,"original":{"line":28,"column":41},"generated":{"line":32,"column":29}},{"source":"../../src/node.ts","name":null,"original":{"line":28,"column":56},"generated":{"line":32,"column":36}},{"source":"../../src/node.ts","name":null,"original":{"line":28,"column":56},"generated":{"line":32,"column":38}},{"source":"../../src/node.ts","name":null,"original":{"line":29,"column":2},"generated":{"line":33,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":34,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":34,"column":9}},{"source":"../../src/node.ts","name":null,"original":{"line":30,"column":12},"generated":{"line":34,"column":12}},{"source":"../../src/node.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":34,"column":13}},{"source":"../../src/node.ts","name":null,"original":{"line":30,"column":20},"generated":{"line":34,"column":20}},{"source":"../../src/node.ts","name":null,"original":{"line":30,"column":21},"generated":{"line":34,"column":21}},{"source":"../../src/node.ts","name":null,"original":{"line":30,"column":28},"generated":{"line":34,"column":28}},{"source":"../../src/node.ts","name":null,"original":{"line":30,"column":29},"generated":{"line":34,"column":29}},{"source":"../../src/node.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":35,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":36,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":49,"column":0}},{"source":"../../src/node.ts","name":null,"original":{"line":46,"column":16},"generated":{"line":49,"column":9}},{"source":"../../src/node.ts","name":null,"original":{"line":46,"column":26},"generated":{"line":49,"column":19}},{"source":"../../src/node.ts","name":null,"original":{"line":46,"column":30},"generated":{"line":49,"column":20}},{"source":"../../src/node.ts","name":null,"original":{"line":46,"column":48},"generated":{"line":49,"column":30}},{"source":"../../src/node.ts","name":null,"original":{"line":46,"column":48},"generated":{"line":49,"column":32}},{"source":"../../src/node.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":50,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":47,"column":6},"generated":{"line":50,"column":6}},{"source":"../../src/node.ts","name":null,"original":{"line":47,"column":24},"generated":{"line":50,"column":9}},{"source":"../../src/node.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":51,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":51,"column":6}},{"source":"../../src/node.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":52,"column":4}},{"source":"../../src/node.ts","name":null,"original":{"line":50,"column":7},"generated":{"line":52,"column":7}},{"source":"../../src/node.ts","name":null,"original":{"line":50,"column":10},"generated":{"line":52,"column":10}},{"source":"../../src/node.ts","name":null,"original":{"line":50,"column":24},"generated":{"line":52,"column":24}},{"source":"../../src/node.ts","name":null,"original":{"line":50,"column":25},"generated":{"line":52,"column":25}},{"source":"../../src/node.ts","name":null,"original":{"line":50,"column":31},"generated":{"line":52,"column":31}},{"source":"../../src/node.ts","name":null,"original":{"line":50,"column":33},"generated":{"line":52,"column":33}},{"source":"../../src/node.ts","name":null,"original":{"line":50,"column":43},"generated":{"line":52,"column":43}},{"source":"../../src/node.ts","name":null,"original":{"line":50,"column":44},"generated":{"line":52,"column":44}},{"source":"../../src/node.ts","name":null,"original":{"line":51,"column":3},"generated":{"line":53,"column":3}},{"source":"../../src/node.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":53,"column":4}},{"source":"../../src/node.ts","name":null,"original":{"line":51,"column":11},"generated":{"line":53,"column":11}},{"source":"../../src/node.ts","name":null,"original":{"line":51,"column":12},"generated":{"line":53,"column":12}},{"source":"../../src/node.ts","name":null,"original":{"line":51,"column":14},"generated":{"line":53,"column":14}},{"source":"../../src/node.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":54,"column":4}},{"source":"../../src/node.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":55,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":56,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":56,"column":6}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":4}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":8}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":11}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":14}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":28}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":29}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":35}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":37}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":46}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":47}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":57,"column":48}},{"source":"../../src/node.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":57,"column":51}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":58,"column":4}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":58,"column":7}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":10},"generated":{"line":58,"column":10}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":24},"generated":{"line":58,"column":24}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":25},"generated":{"line":58,"column":25}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":31},"generated":{"line":58,"column":31}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":36},"generated":{"line":58,"column":33}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":39},"generated":{"line":58,"column":36}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":41},"generated":{"line":58,"column":38}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":41},"generated":{"line":58,"column":41}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":41},"generated":{"line":58,"column":57}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":58},"generated":{"line":58,"column":60}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":70},"generated":{"line":58,"column":70}},{"source":"../../src/node.ts","name":null,"original":{"line":57,"column":76},"generated":{"line":58,"column":71}},{"source":"../../src/node.ts","name":null,"original":{"line":58,"column":3},"generated":{"line":59,"column":3}},{"source":"../../src/node.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":59,"column":4}},{"source":"../../src/node.ts","name":null,"original":{"line":58,"column":11},"generated":{"line":59,"column":11}},{"source":"../../src/node.ts","name":null,"original":{"line":58,"column":12},"generated":{"line":59,"column":12}},{"source":"../../src/node.ts","name":null,"original":{"line":58,"column":14},"generated":{"line":59,"column":14}},{"source":"../../src/node.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":60,"column":4}},{"source":"../../src/node.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":61,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":62,"column":2}},{"source":"../../src/node.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":62,"column":9}},{"source":"../../src/node.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":62,"column":12}},{"source":"../../src/node.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"../../src/node.ts":"/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n"},"lineCount":null}},"error":null,"hash":"fd738aa296a287941ce48385a6a41fe2","cacheData":{"env":{}}}